CREATE DATABASE Proyecto;
USE Proyecto

CREATE SCHEMA Transaccion
CREATE SCHEMA Almacen

CREATE TABLE Almacen.Vendedor
(
	idVendedor BIGINT IDENTITY(1,1) NOT NULL,
	Nombre VARCHAR(100) NOT NULL,
	Domicilio VARCHAR(100) NOT NULL,
	Email VARCHAR(200) NOT NULL,
	Telefono VARCHAR(20) NOT NULL,
	FechaNac DATE NOT NULL,
	Edad INT NULL,
	CONSTRAINT PK_VENDEDOR PRIMARY KEY(idVendedor)
)

CREATE TABLE Transaccion.Cliente 
(
	idCliente BIGINT IDENTITY(1,1) NOT NULL,
	Nombre VARCHAR(100) NOT NULL,
	Domicilio VARCHAR(100) NOT NULL,
	Email VARCHAR(200) NOT NULL,
	Telefono VARCHAR(20) NOT NULL,
	FechaNac DATE NOT NULL,
	Edad INT NULL,
	CONSTRAINT PK_CLIENTE PRIMARY KEY(idCliente)
)

CREATE TABLE Almacen.TipoProducto
(
	idTipoProducto BIGINT IDENTITY(1,1) NOT NULL,
	Nombre VARCHAR(100) NOT NULL,
	Descripcion VARCHAR(500) NOT NULL,
	CONSTRAINT PK_TIPOPRODUCTO PRIMARY KEY(idTipoProducto)
)

CREATE TABLE Almacen.Producto
(
	idProducto  BIGINT IDENTITY NOT NULL,
	idTipoProducto BIGINT NOT NULL,
	Stock INT NOT NULL,
	Tamaño VARCHAR(50) NOT NULL,
	Precio FLOAT NOT NULL,
	CONSTRAINT PK_PRODUCTO1 PRIMARY KEY(idProducto),
	CONSTRAINT FK_TIPOPRODUCTO FOREIGN KEY(idTipoProducto) REFERENCES Almacen.TipoProducto(idTipoProducto)
)
CREATE TABLE Transaccion.Venta 
(
	idVenta BIGINT IDENTITY(1,1) NOT NULL,
	idCliente BIGINT NOT NULL,
	idVendedor BIGINT NOT NULL,
	Fecha DATE NOT NULL,
	TOTAL FLOAT NULL,
	CONSTRAINT PK_VENTA1 PRIMARY KEY(idVenta),
	CONSTRAINT FK_CLIENTE FOREIGN KEY(idCliente) REFERENCES Transaccion.Cliente(idCliente),
	CONSTRAINT FK_VENDEDOR FOREIGN KEY (idVendedor) REFERENCES Almacen.Vendedor(idVendedor) 
)

CREATE TABLE Transaccion.DetalleVenta
(
	idVenta BIGINT NOT NULL,
	idProducto BIGINT NOT NULL,
	Cantidad INT NOT NULL,
	Subtotal FLOAT NULL,
	CONSTRAINT FK_VENTA2 FOREIGN KEY(idVenta) REFERENCES Transaccion.Venta(idVenta),
	CONSTRAINT FK_PRODUCTO2 FOREIGN KEY(idProducto) REFERENCES Almacen.Producto(idProducto)
)

CREATE TABLE Almacen.Devolucion
 (
	idDevolucion BIGINT IDENTITY(1,1) NOT NULL,
	idVenta BIGINT NOT NULL,
	Motivo VARCHAR(400) NOT NULL,
	Fecha DATE NOT NULL,
	Total INT NULL,
	CONSTRAINT PK_DEVOLUCION PRIMARY KEY(idDevolucion),
	CONSTRAINT FK_VENTA3 FOREIGN KEY(idVenta) REFERENCES Transaccion.Venta(idVenta)
 )

 CREATE TABLE Almacen.DetalleDevolucion
 (
	idDevolucion BIGINT NOT NULL,
	idVenta BIGINT NOT NULL,
	Cantidad INT NOT NULL,
	Subtotal INT NULL,
	CONSTRAINT FK_DEVOLUCCION FOREIGN KEY(idDevolucion) REFERENCES Almacen.Devolucion(idDevolucion),
	CONSTRAINT FK_VENTA4 FOREIGN KEY(idVenta) REFERENCES Transaccion.Venta
 )
 ---TRIGGERS
 --				EDAD VENDEDOR
 CREATE TRIGGER Almacen.calculaEdad ON Almacen.Vendedor AFTER INSERT AS BEGIN SET NOCOUNT ON DECLARE
@ID AS BIGINT SELECT @ID=idVendedor FROM inserted UPDATE Almacen.Vendedor
SET Edad = CAST(DATEDIFF(dd,FechaNac,GETDATE()) / 365.25 as int) WHERE idVendedor=@ID END
----		EDAD CLIENTE
CREATE TRIGGER Transaccion.calculaEdad ON Transaccion.Cliente AFTER INSERT AS BEGIN SET NOCOUNT ON DECLARE
@ID AS BIGINT SELECT @ID=idCliente FROM inserted UPDATE Transaccion.Cliente
SET Edad = CAST(DATEDIFF(dd,FechaNac,GETDATE()) / 365.25 as int) WHERE idCliente=@ID END

INSERT INTO Almacen.Vendedor(Nombre,Domicilio,Email,Telefono,FechaNac,Edad)VALUES ('Diego','B. Anaya','diego_pilcar@hotmail.com',
'866-132-62-79','1996-10-03',NULL)
INSERT INTO Almacen.Vendedor(Nombre,Domicilio,Email,Telefono,FechaNac,Edad)VALUES ('Aldo','B. Anaya','aldopilcar@hotmail.com',
'866-123-45-78','1999-08-23',NULL)
INSERT INTO Transaccion.Cliente(Nombre,Domicilio,Email,Telefono,FechaNac,Edad)VALUES ('Jose','Roma','hotmail@hotmail.com',
'123-456-78-90','1996-08-03',NULL)
SELECT * FROM Almacen.Vendedor
SELECT * FROM Transaccion.Cliente

--Triger de ventas de productos descontar stock 

CREATE TRIGGER Transaccion.calculaStock ON Transaccion.DetalleVenta AFTER INSERT AS BEGIN SET NOCOUNT ON DECLARE
@ID AS BIGINT SELECT @ID=idVenta FROM inserted UPDATE Almacen.Producto
SET Stock =Stock -(SELECT Cantidad FROM Transaccion.DetalleVenta WHERE idVenta=@ID) WHERE idProducto=(SELECT idProducto FROM 
Transaccion.DetalleVenta WHERE idVenta=@ID)  END

INSERT INTO Almacen.TipoProducto(Nombre,Descripcion) VALUES ('COLCHA REGINA','JGIJHVJHVGCGCGCGCGJCJ')
SELECT * FROM Almacen.TipoProducto
INSERT INTO Almacen.Producto (idTipoProducto,Stock,Tamaño,Precio) VALUES(1,50,'MATRIMONIAL',18.45)
INSERT INTO Almacen.Producto (idTipoProducto,Stock,Tamaño,Precio) VALUES(1,50,'INDIVIDUAL',20.50)
SELECT * FROM Almacen.Producto
SELECT * FROM Transaccion.Venta
SELECT * FROM Transaccion.DetalleVenta
SELECT * FROM  Transaccion.DetalleVenta WHERE idVenta=1
SELECT * FROM Transaccion.Cliente
INSERT INTO Transaccion.Venta(idCliente,idVendedor,Fecha,TOTAL) VALUES(1,1,'2019-09-15',NULL)
SELECT * FROM Transaccion.Venta
SELECT * FROM Transaccion.DetalleVenta
INSERT INTO Transaccion.DetalleVenta (idVenta,idProducto,Cantidad,Subtotal)VALUES (3,2,15,NULL)

DROP TABLE 

--		TRIGGER DE DEVOLUCION DE PRODUCTOS AUMENTO DE STOCK
CREATE TRIGGER Almacen.RegresaProducto ON Almacen.DetalleDevolucion AFTER INSERT AS BEGIN SET NOCOUNT ON DECLARE
@ID AS BIGINT SELECT @ID=idDevolucion FROM inserted UPDATE Almacen.Producto
SET Stock =Stock +(SELECT Cantidad FROM Almacen.DetalleDevolucion WHERE idDevolucion=@ID) WHERE idProducto=(SELECT idProducto FROM 
Almacen.DetalleDevolucion WHERE idDevolucion=@ID) END

INSERT INTO Almacen.Devolucion(idVenta,Motivo,Fecha,Total) VALUES (1,'mala calidad','2019-08-15',NULL)
select * FROM Almacen.Devolucion
SELECT *FROM Almacen.Producto
select * FROM Almacen.DetalleDevolucion
SELECT * FROM Transaccion.Venta

INSERT INTO Almacen.DetalleDevolucion (idDevolucion,idVenta,Cantidad,Subtotal) VALUES (1,3,80,NULL)
SELECT * FROM Almacen.Producto

--		TRIGGER PARA SUBSTOTAL
CREATE TRIGGER Transaccion.calculaSubtotal ON Transaccion.DetalleVenta AFTER INSERT AS BEGIN SET NOCOUNT ON DECLARE
@ID AS BIGINT SELECT @ID=idProducto FROM inserted UPDATE Transaccion.DetalleVenta 
SET Subtotal =Cantidad * (SELECT Precio FROM Almacen.Producto WHERE idProducto=@ID)  WHERE idProducto=(SELECT idProducto FROM 
Almacen.Producto WHERE idProducto=@ID) END
